{"ast":null,"code":"var _jsxFileName = \"/Users/skooter/Desktop/Class/\\u0E1B\\u0E353/IoT/parking-system/parking-system/frontend/src/Components/ParkingDetail.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParkingDetail = props => {\n  console.log(props.parkings);\n  var dateDiff;\n\n  if (props.parkings.status === 1) {\n    dateDiff = calDatetimeDiff(new Date(), new Date(props.parkings.entry));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"m-2\",\n    children: props.parkings.status === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"text-primary\",\n        children: [\" \", props.parkings.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Parked time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", new Date(props.parkings.entry).toLocaleString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date().toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Parking period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [dateDiff[0], \" Days \", dateDiff[1], \" Hours \", dateDiff[2], \" Minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"Pay\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 14\n      }, this)]\n    }, props.parkings.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ID not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ParkingDetail;\n\nfunction calDatetimeDiff(current, parked) {\n  // get total seconds between the times\n  var delta = Math.abs(current - parked) / 1000; // calculate (and subtract) whole days\n\n  var days = Math.floor(delta / 86400);\n  delta -= days * 86400; // calculate (and subtract) whole hours\n\n  var hours = Math.floor(delta / 3600) % 24;\n  delta -= hours * 3600; // calculate (and subtract) whole minutes\n\n  var minutes = Math.floor(delta / 60) % 60;\n  delta -= minutes * 60;\n  return [days, hours, minutes];\n}\n\nexport default ParkingDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingDetail\");","map":{"version":3,"sources":["/Users/skooter/Desktop/Class/ปี3/IoT/parking-system/parking-system/frontend/src/Components/ParkingDetail.js"],"names":["ParkingDetail","props","console","log","parkings","dateDiff","status","calDatetimeDiff","Date","entry","id","toLocaleString","current","parked","delta","Math","abs","days","floor","hours","minutes"],"mappings":";;;AACA,MAAMA,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,MAAIC,QAAJ;;AACA,MAAGJ,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,CAA7B,EAA+B;AAC3BD,IAAAA,QAAQ,GAAGE,eAAe,CAAC,IAAIC,IAAJ,EAAD,EAAa,IAAIA,IAAJ,CAASP,KAAK,CAACG,QAAN,CAAeK,KAAxB,CAAb,CAA1B;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,cAGER,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,CAA1B,gBACE;AAAA,8BACI;AAAI,QAAA,SAAS,EAAC,cAAd;AAAA,wBAAgCL,KAAK,CAACG,QAAN,CAAeM,EAA/C;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,wBAAK,IAAIF,IAAJ,CAASP,KAAK,CAACG,QAAN,CAAeK,KAAxB,EAA+BE,cAA/B,EAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,kBAAI,IAAIH,IAAJ,GAAWG,cAAX;AAAJ;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,mBAAKN,QAAQ,CAAC,CAAD,CAAb,YAAyBA,QAAQ,CAAC,CAAD,CAAjC,aAA6CA,QAAQ,CAAC,CAAD,CAArD;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ,eASC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATD;AAAA,OAAWJ,KAAK,CAACG,QAAN,CAAeM,EAA1B;AAAA;AAAA;AAAA;AAAA,YADF,gBAaM;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAhBR;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH,CA/BD;;KAAMV,a;;AAiCN,SAASO,eAAT,CAAyBK,OAAzB,EAAkCC,MAAlC,EAAyC;AACrC;AACA,MAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASJ,OAAO,GAAGC,MAAnB,IAA6B,IAAzC,CAFqC,CAIrC;;AACA,MAAII,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,KAAnB,CAAX;AACAA,EAAAA,KAAK,IAAIG,IAAI,GAAG,KAAhB,CANqC,CAQrC;;AACA,MAAIE,KAAK,GAAGJ,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,IAAnB,IAA2B,EAAvC;AACAA,EAAAA,KAAK,IAAIK,KAAK,GAAG,IAAjB,CAVqC,CAYrC;;AACA,MAAIC,OAAO,GAAGL,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,EAAnB,IAAyB,EAAvC;AACAA,EAAAA,KAAK,IAAIM,OAAO,GAAG,EAAnB;AAEA,SAAO,CAACH,IAAD,EAAOE,KAAP,EAAcC,OAAd,CAAP;AACH;;AAED,eAAepB,aAAf","sourcesContent":["\nconst ParkingDetail = (props) => {\n    console.log(props.parkings)\n    var dateDiff;\n    if(props.parkings.status === 1){\n        dateDiff = calDatetimeDiff(new Date(), new Date(props.parkings.entry));\n    }\n    return (\n        <div className=\"m-2\">\n        {/* Display the article details if article is not None */} \n        {\n          props.parkings.status === 1 ? (\n            <div key= {props.parkings.id}>\n                <h2 className=\"text-primary\"> { props.parkings.id} </h2>\n                <p>Parked time</p>\n                <p> {new Date(props.parkings.entry).toLocaleString() } </p>\n                <p>Current time</p>\n                <p>{new Date().toLocaleString()}</p>\n                <p>Parking period</p>\n                <p>{ dateDiff[0] } Days {dateDiff[1]} Hours {dateDiff[2]} Minutes</p>\n                {/* <p> { props.parkings.departure } </p> */}\n    \t        <button>Pay</button>\n              </div>\n            ) : (\n                <div>\n                    <h2>ID not found</h2>\n                </div>\n            )  \n        }\n              \n        </div>\n        )\n}\n\nfunction calDatetimeDiff(current, parked){\n    // get total seconds between the times\n    var delta = Math.abs(current - parked) / 1000;\n\n    // calculate (and subtract) whole days\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n\n    // calculate (and subtract) whole hours\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n\n    // calculate (and subtract) whole minutes\n    var minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n\n    return [days, hours, minutes];\n}\n\nexport default ParkingDetail;"]},"metadata":{},"sourceType":"module"}