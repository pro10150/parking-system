{"ast":null,"code":"var _jsxFileName = \"/Users/skooter/Desktop/Class/\\u0E1B\\u0E353/IoT/parking-system/parking-system/frontend/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport './App.css';\nimport ArticleList from './Components/ArticleList';\nimport ParkingList from './Components/ParkingList';\nimport Detail from './Components/Detail';\nimport QRCode from \"./Components/QRCode\";\nimport { BrowserRouter as Router, Routes, Route, Link, useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const navigate = useNavigate();\n  const [articles, setArticles] = useState([]);\n  const [parkings, setParkings] = useState([]);\n  const [value, setValue] = useState([]); // Modify the current state by setting the new data to\n  // the response from the backend\n\n  useEffect(() => {\n    fetch('http://192.168.1.108:4000/parking', {\n      'methods': 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(response => response.json()).then(response => setParkings(response)).catch(error => console.log(error));\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    navigate('/' + value); // do what you want with your form data\n    // navigate('/2');\n  };\n\n  return /*#__PURE__*/_jsxDEV(Routes, {\n    children: [/*#__PURE__*/_jsxDEV(Route, {\n      path: \"/\",\n      element: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App container m-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"\\u0E23\\u0E30\\u0E1A\\u0E1A\\u0E08\\u0E2D\\u0E14\\u0E23\\u0E16\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n              onSubmit: handleSubmit,\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"Name:\", /*#__PURE__*/_jsxDEV(\"input\", {\n                  type: \"number\",\n                  name: \"name\",\n                  value: value,\n                  onChange: e => setValue(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 55,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ParkingList, {\n          parkings: parkings\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:id\",\n      element: /*#__PURE__*/_jsxDEV(Detail, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Route, {\n      path: \"/:id/qr\",\n      element: /*#__PURE__*/_jsxDEV(QRCode, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 40\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 7\n  }, this);\n}\n\n_s(App, \"g8mZjvBnXWqvt2m+7G02DnZF8kA=\", false, function () {\n  return [useNavigate];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/skooter/Desktop/Class/ปี3/IoT/parking-system/parking-system/frontend/src/App.js"],"names":["useState","useEffect","ArticleList","ParkingList","Detail","QRCode","BrowserRouter","Router","Routes","Route","Link","useNavigate","App","navigate","articles","setArticles","parkings","setParkings","value","setValue","fetch","headers","then","response","json","catch","error","console","log","handleSubmit","e","preventDefault","target"],"mappings":";;;AAAA,SAASA,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;AACA,OAAO,WAAP;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,EAKEC,WALF,QAMO,kBANP;;;AAQA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAMC,QAAQ,GAAGF,WAAW,EAA5B;AAEA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACgB,QAAD,EAAWC,WAAX,IAA0BjB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACkB,KAAD,EAAQC,QAAR,IAAoBnB,QAAQ,CAAC,EAAD,CAAlC,CALa,CAOb;AACA;;AACAC,EAAAA,SAAS,CAAC,MAAI;AACZmB,IAAAA,KAAK,CAAC,mCAAD,EAAqC;AACxC,iBAAU,KAD8B;AAExCC,MAAAA,OAAO,EAAG;AACR,wBAAe;AADP;AAF8B,KAArC,CAAL,CAMCC,IAND,CAMMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EANlB,EAOCF,IAPD,CAOMC,QAAQ,IAAIN,WAAW,CAACM,QAAD,CAP7B,EAQCE,KARD,CAQOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CARhB;AAUD,GAXQ,EAWP,EAXO,CAAT;;AAaA,QAAMG,YAAY,GAAIC,CAAD,IAAO;AACxBA,IAAAA,CAAC,CAACC,cAAF;AACAlB,IAAAA,QAAQ,CAAC,MAAIK,KAAL,CAAR,CAFwB,CAGxB;AACA;AACH,GALD;;AAOA,sBAEI,QAAC,MAAD;AAAA,4BACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,GAAZ;AAAgB,MAAA,OAAO,eACrB;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA,gCACA;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,iCACE;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAM,cAAA,QAAQ,EAAEW,YAAhB;AAAA,sCACE;AAAA,iDAEI;AAAO,kBAAA,IAAI,EAAC,QAAZ;AAAqB,kBAAA,IAAI,EAAC,MAA1B;AAAiC,kBAAA,KAAK,EAAEX,KAAxC;AAA+C,kBAAA,QAAQ,EAAEY,CAAC,IAAIX,QAAQ,CAACW,CAAC,CAACE,MAAF,CAASd,KAAV;AAAtE;AAAA;AAAA;AAAA;AAAA,wBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE;AAAO,gBAAA,IAAI,EAAC,QAAZ;AAAqB,gBAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,sBALF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADA,eAeE,QAAC,WAAD;AACA,UAAA,QAAQ,EAAEF;AADV;AAAA;AAAA;AAAA;AAAA,gBAfF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAwBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,MAAZ;AAAmB,MAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA5B;AAAA;AAAA;AAAA;AAAA,YAxBF,eAyBE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,OAAO,eAAE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAA/B;AAAA;AAAA;AAAA;AAAA,YAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AA+BD;;GA5DQJ,G;UACUD,W;;;KADVC,G;AA8DT,eAAeA,GAAf","sourcesContent":["import { useState,useEffect } from 'react'\nimport './App.css';\nimport ArticleList from './Components/ArticleList'\nimport ParkingList from './Components/ParkingList'\nimport Detail from './Components/Detail'\nimport QRCode from \"./Components/QRCode\";\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n  Link,\n  useNavigate\n} from 'react-router-dom';\n\nfunction App() {\n  const navigate = useNavigate();\n\n  const [articles, setArticles] = useState([]);\n  const [parkings, setParkings] = useState([]);\n  const [value, setValue] = useState([]);\n\n  // Modify the current state by setting the new data to\n  // the response from the backend\n  useEffect(()=>{\n    fetch('http://192.168.1.108:4000/parking',{\n      'methods':'GET',\n      headers : {\n        'Content-Type':'application/json'\n      }\n    })\n    .then(response => response.json())\n    .then(response => setParkings(response))\n    .catch(error => console.log(error))\n\n  },[])\n\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      navigate('/'+value);\n      // do what you want with your form data\n      // navigate('/2');\n  }\n\n  return (\n\n      <Routes>\n        <Route path=\"/\" element={\n          <div className=\"App container m-4\">\n          <div className=\"row\">\n            <div className=\"text-center\">\n            <h1>ระบบจอดรถ</h1>\n            <form onSubmit={handleSubmit}>\n              <label>\n                Name:\n                  <input type=\"number\" name=\"name\" value={value} onChange={e => setValue(e.target.value)} />\n              </label>\n              <input type=\"submit\" value=\"Submit\" />\n            </form>\n\n            </div>\n          </div>\n\n            <ParkingList \n            parkings={parkings} \n            />\n\n          </div>  \n\n          } />\n        <Route path=\"/:id\" element={<Detail />} />\n        <Route path=\"/:id/qr\" element={<QRCode />} />\n      </Routes>\n    \n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}