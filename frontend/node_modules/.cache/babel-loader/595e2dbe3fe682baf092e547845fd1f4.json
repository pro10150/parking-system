{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ASUS\\\\Desktop\\\\Parking system\\\\parking-system-main\\\\frontend\\\\src\\\\Components\\\\ParkingDetail.js\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParkingDetail = props => {\n  console.log(props.parkings);\n  var dateDiff;\n\n  if (props.parkings.status === 1) {\n    dateDiff = calDatetimeDiff(new Date(), new Date(props.parkings.entry));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-xxl\",\n    children: props.parkings.status === 1 ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [\" \", props.parkings.id, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Parked time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \", new Date(props.parkings.entry).toLocaleString(), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Current time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: new Date().toLocaleString()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Parking period\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 25\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [dateDiff[0], \" Days \", dateDiff[1], \" Hours \", dateDiff[2], \" Minutes\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 25\n      }, this), props.parkings.departure === 1 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Back to Home Screen\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 37\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 33\n      }, this) : dateDiff[0] > 0 && dateDiff[1] > 4 ? /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\" + props.parkings.id + \"/qr\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Pay\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\" + props.parkings.id + \"/qr\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Create QR Code\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 41\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 37\n      }, this)]\n    }, props.parkings.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"ID not found\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 21\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }, this);\n};\n\n_c = ParkingDetail;\n\nfunction calDatetimeDiff(current, parked) {\n  // get total seconds between the times\n  var delta = Math.abs(current - parked) / 1000; // calculate (and subtract) whole days\n\n  var days = Math.floor(delta / 86400);\n  delta -= days * 86400; // calculate (and subtract) whole hours\n\n  var hours = Math.floor(delta / 3600) % 24;\n  delta -= hours * 3600; // calculate (and subtract) whole minutes\n\n  var minutes = Math.floor(delta / 60) % 60;\n  delta -= minutes * 60;\n  return [days, hours, minutes];\n}\n\nexport default ParkingDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParkingDetail\");","map":{"version":3,"sources":["C:/Users/ASUS/Desktop/Parking system/parking-system-main/frontend/src/Components/ParkingDetail.js"],"names":["Link","useParams","ParkingDetail","props","console","log","parkings","dateDiff","status","calDatetimeDiff","Date","entry","id","toLocaleString","departure","current","parked","delta","Math","abs","days","floor","hours","minutes"],"mappings":";AACA,SACIA,IADJ,EAEIC,SAFJ,QAGO,kBAHP;;;AAIA,MAAMC,aAAa,GAAIC,KAAD,IAAW;AAC7BC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,QAAlB;AACA,MAAIC,QAAJ;;AACA,MAAIJ,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,CAA9B,EAAiC;AAC7BD,IAAAA,QAAQ,GAAGE,eAAe,CAAC,IAAIC,IAAJ,EAAD,EAAa,IAAIA,IAAJ,CAASP,KAAK,CAACG,QAAN,CAAeK,KAAxB,CAAb,CAA1B;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,cAGQR,KAAK,CAACG,QAAN,CAAeE,MAAf,KAA0B,CAA1B,gBACI;AAAA,8BACI;AAAA,+BACI;AAAA,0BAAML,KAAK,CAACG,QAAN,CAAeM,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA,wBAAK,IAAIF,IAAJ,CAASP,KAAK,CAACG,QAAN,CAAeK,KAAxB,EAA+BE,cAA/B,EAAL;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAA,kBAAI,IAAIH,IAAJ,GAAWG,cAAX;AAAJ;AAAA;AAAA;AAAA;AAAA,cAPJ,eAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARJ,eASI;AAAA,mBAAIN,QAAQ,CAAC,CAAD,CAAZ,YAAuBA,QAAQ,CAAC,CAAD,CAA/B,aAA2CA,QAAQ,CAAC,CAAD,CAAnD;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,EAYQJ,KAAK,CAACG,QAAN,CAAeQ,SAAf,KAA6B,CAA7B,gBACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,GAAT;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,GAKIP,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAd,IAAmBA,QAAQ,CAAC,CAAD,CAAR,GAAc,CAAjC,gBACI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,MAAMJ,KAAK,CAACG,QAAN,CAAeM,EAArB,GAA0B,KAApC;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,gBAMI,QAAC,IAAD;AAAM,QAAA,EAAE,EAAE,MAAMT,KAAK,CAACG,QAAN,CAAeM,EAArB,GAA0B,KAApC;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAvBhB;AAAA,OAAUT,KAAK,CAACG,QAAN,CAAeM,EAAzB;AAAA;AAAA;AAAA;AAAA,YADJ,gBAiCI;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AApCZ;AAAA;AAAA;AAAA;AAAA,UADJ;AA6CH,CAnDD;;KAAMV,a;;AAqDN,SAASO,eAAT,CAAyBM,OAAzB,EAAkCC,MAAlC,EAA0C;AACtC;AACA,MAAIC,KAAK,GAAGC,IAAI,CAACC,GAAL,CAASJ,OAAO,GAAGC,MAAnB,IAA6B,IAAzC,CAFsC,CAItC;;AACA,MAAII,IAAI,GAAGF,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,KAAnB,CAAX;AACAA,EAAAA,KAAK,IAAIG,IAAI,GAAG,KAAhB,CANsC,CAQtC;;AACA,MAAIE,KAAK,GAAGJ,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,IAAnB,IAA2B,EAAvC;AACAA,EAAAA,KAAK,IAAIK,KAAK,GAAG,IAAjB,CAVsC,CAYtC;;AACA,MAAIC,OAAO,GAAGL,IAAI,CAACG,KAAL,CAAWJ,KAAK,GAAG,EAAnB,IAAyB,EAAvC;AACAA,EAAAA,KAAK,IAAIM,OAAO,GAAG,EAAnB;AAEA,SAAO,CAACH,IAAD,EAAOE,KAAP,EAAcC,OAAd,CAAP;AACH;;AAED,eAAerB,aAAf","sourcesContent":["\nimport {\n    Link,\n    useParams\n} from \"react-router-dom\";\nconst ParkingDetail = (props) => {\n    console.log(props.parkings)\n    var dateDiff;\n    if (props.parkings.status === 1) {\n        dateDiff = calDatetimeDiff(new Date(), new Date(props.parkings.entry));\n    }\n    return (\n        <div className=\"container-xxl\">\n            {/* Display the article details if article is not None */}\n            {\n                props.parkings.status === 1 ? (\n                    <div key={props.parkings.id}>\n                        <div>\n                            <h2> {props.parkings.id} </h2>\n                        </div>\n                        <p>Parked time</p>\n                        <p> {new Date(props.parkings.entry).toLocaleString()} </p>\n                        <p>Current time</p>\n                        <p>{new Date().toLocaleString()}</p>\n                        <p>Parking period</p>\n                        <p>{dateDiff[0]} Days {dateDiff[1]} Hours {dateDiff[2]} Minutes</p>\n                        {/* <p> { props.parkings.departure } </p> */}\n                        {\n                            props.parkings.departure === 1 ? (\n                                <Link to=\"/\">\n                                    <button>Back to Home Screen</button>\n                                </Link>\n                            ) : (\n                                dateDiff[0] > 0 && dateDiff[1] > 4 ? (\n                                    <Link to={\"/\" + props.parkings.id + \"/qr\"}>\n                                        <button>Pay</button>\n                                    </Link>\n\n                                ) : (\n                                    <Link to={\"/\" + props.parkings.id + \"/qr\"}>\n                                        <button>Create QR Code</button>\n                                    </Link>\n\n                                )\n                            )\n                        }\n                    </div>\n                ) : (\n                    <div>\n                        <h2>ID not found</h2>\n                    </div>\n                )\n            }\n\n        </div>\n    )\n}\n\nfunction calDatetimeDiff(current, parked) {\n    // get total seconds between the times\n    var delta = Math.abs(current - parked) / 1000;\n\n    // calculate (and subtract) whole days\n    var days = Math.floor(delta / 86400);\n    delta -= days * 86400;\n\n    // calculate (and subtract) whole hours\n    var hours = Math.floor(delta / 3600) % 24;\n    delta -= hours * 3600;\n\n    // calculate (and subtract) whole minutes\n    var minutes = Math.floor(delta / 60) % 60;\n    delta -= minutes * 60;\n\n    return [days, hours, minutes];\n}\n\nexport default ParkingDetail;"]},"metadata":{},"sourceType":"module"}